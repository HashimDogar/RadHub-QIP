diff --git a/frontend/src/pages/Dashboard.jsx b/frontend/src/pages/Dashboard.jsx
index a410078588d97e0d4a338b267a812d57eeb41829..72bfb32e6e1a244979ec28c7a4f39620d3143ffd 100644
--- a/frontend/src/pages/Dashboard.jsx
+++ b/frontend/src/pages/Dashboard.jsx
@@ -1,27 +1,27 @@
 import React, { useEffect, useRef, useState } from 'react'
-import PieChart from '../components/PieChart'
+import PieChart, { PIE_COLORS } from '../components/PieChart'
 import Modules from '../components/Modules'
 import { getUser, updateUser, gmcLookup, getRank } from '../lib/api'
 
 export default function Dashboard(){
   const [gmc, setGmc] = useState('')
   const [data, setData] = useState(null)
   const [msg, setMsg] = useState('')
   const [recognised, setRecognised] = useState(null)
   const [busy, setBusy] = useState(false)
 
   const [signupName, setSignupName] = useState('')
   const [signupSpec, setSignupSpec] = useState('')
   const [signupGrade, setSignupGrade] = useState('')
   const [signupHosp, setSignupHosp] = useState('')
 
   const [rankMetric, setRankMetric] = useState('score')
   const [rankBy, setRankBy] = useState('hospital')
   const [rankValue, setRankValue] = useState('')
   const [rankData, setRankData] = useState(null)
 
   const isGmcValid = /^\d{7}$/.test(gmc)
   const debounceRef = useRef()
 
   async function fetchUser(){
     if (!isGmcValid){ setMsg('GMC must be 7 digits'); setRecognised(null); setData(null); return }
diff --git a/frontend/src/pages/Dashboard.jsx b/frontend/src/pages/Dashboard.jsx
index a410078588d97e0d4a338b267a812d57eeb41829..72bfb32e6e1a244979ec28c7a4f39620d3143ffd 100644
--- a/frontend/src/pages/Dashboard.jsx
+++ b/frontend/src/pages/Dashboard.jsx
@@ -48,67 +48,84 @@ export default function Dashboard(){
   }, [gmc])
 
   async function createProfile(){
     if (!signupName || !signupSpec || !signupGrade || !signupHosp){ alert('Complete all fields'); return }
     setBusy(True)
     try{
       const r = await updateUser(gmc.trim(), { name: signupName, specialty: signupSpec, grade: signupGrade, hospital: signupHosp })
       if (r && r.ok){ await fetchUser() } else alert(r?.error||'Could not create profile')
     } finally { setBusy(false) }
   }
 
   const profileCard = recognised ? (
     <section className="card">
       <h3>Profile</h3>
       <div className="kpis">
         <div className="kpi"><div>GMC</div><strong>{data.user.gmc}</strong></div>
         <div className="kpi"><div>Name</div><strong>{data.user.name || '-'}</strong></div>
         <div className="kpi"><div>Hospital</div><strong>{data.user.hospital || '-'}</strong></div>
         <div className="kpi"><div>Specialty</div><strong>{data.user.specialty || '-'}</strong></div>
         <div className="kpi"><div>Grade</div><strong>{data.user.grade || '-'}</strong></div>
         <div className="kpi"><div>Score</div><strong>{data.user.score}</strong></div>
       </div>
     </section>
   ) : null
 
-  const summaryCard = recognised ? (
-    <section className="card">
-      <h3>Summary</h3>
-      <div className="row" style={{ alignItems:'center' }}>
-        <div style={{ flex:'0 0 auto' }}>
-          <PieChart data={[
-            { label:'Accepted (incl. overrides)', value: (data.stats.counts.accepted + data.stats.counts.override) },
-            { label:'Delayed', value: data.stats.counts.delayed },
-            { label:'Rejected', value: data.stats.counts.rejected }
-          ]} />
-        </div>
-        <div style={{ minWidth: 220 }}>
-          <div>Overrides: <strong>{data.stats.counts.override}</strong></div>
+  const summaryCard = recognised ? (()=>{
+    const accepted = data.stats.counts.accepted + data.stats.counts.override
+    const delayed = data.stats.counts.delayed
+    const rejected = data.stats.counts.rejected
+    const total = accepted + delayed + rejected
+    const quality = total ? ((accepted + delayed * 0.5) / total * 100).toFixed(1) : '0'
+    return (
+      <section className="card">
+        <h3>Summary</h3>
+        <div className="row" style={{ alignItems:'center', gap:20 }}>
+          <div style={{ flex:'0 0 auto' }}>
+            <PieChart data={[
+              { label:'Accepted', value: accepted },
+              { label:'Delayed', value: delayed },
+              { label:'Rejected', value: rejected }
+            ]} />
+            <div style={{ display:'flex', justifyContent:'center', marginTop:8, gap:8, fontSize:12 }}>
+              <div style={{ display:'flex', alignItems:'center', gap:4 }}><span style={{ width:10, height:10, background:PIE_COLORS[0], display:'inline-block' }}></span>Accepted</div>
+              <div style={{ display:'flex', alignItems:'center', gap:4 }}><span style={{ width:10, height:10, background:PIE_COLORS[1], display:'inline-block' }}></span>Delayed</div>
+              <div style={{ display:'flex', alignItems:'center', gap:4 }}><span style={{ width:10, height:10, background:PIE_COLORS[2], display:'inline-block' }}></span>Rejected</div>
+            </div>
+          </div>
+          <div style={{ minWidth: 220 }}>
+            <div>Total requests: <strong>{total}</strong></div>
+            <div>Accepted requests: <strong>{accepted}</strong></div>
+            <div>Delayed requests: <strong>{delayed}</strong></div>
+            <div>Rejected requests: <strong>{rejected}</strong></div>
+            <div>Total score: <strong>{data.user.score}</strong></div>
+            <div>Request quality score: <strong>{quality}%</strong></div>
+          </div>
         </div>
-      </div>
-    </section>
-  ) : null
+      </section>
+    )
+  })() : null
 
   return (
     <div className="grid">
       <section className="card">
         <h2>Your dashboard</h2>
         <div className="row">
           <div style={{ minWidth: 240, flex: '1 1 240px' }}>
             <label>Enter your GMC</label>
             <input value={gmc} onChange={e=>setGmc(e.target.value.replace(/\D/g,'').slice(0,7))} onKeyDown={e=>{ if(e.key==='Enter'&&isGmcValid) fetchUser() }} placeholder="7-digit GMC" maxLength={7} inputMode="numeric" />
           </div>
           <div className="actions" style={{ alignSelf:'end' }}>
             <button className="primary" disabled={!isGmcValid||busy} onClick={fetchUser}>{busy?'Loadingâ€¦':'View'}</button>
           </div>
         </div>
         {msg && <p className="error">{msg}</p>}
       </section>
 
       {profileCard}
       {summaryCard}
       <Modules visible={!!recognised} />
 
       {/* About moves to bottom once recognised */}
       <section className="card">
         <h3>About</h3>
         <p style={{ margin:0 }}>This tool supports safe out-of-hours CT vetting, provides personalised feedback, and offers eLearning based on iRefer guidance.</p>
